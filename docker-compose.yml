services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_social
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      ADDR: ${ADDR}
      DATABASE_URL: postgres://postgres:root@postgres:5432/go_social?sslmode=disable
      SECRET_KEY: ${SECRET_KEY}
      DB_MAX_OPEN_CONNS: ${DB_MAX_OPEN_CONNS}
      DB_MAX_IDLE_CONNS: ${DB_MAX_IDLE_CONNS}
      DB_MAX_IDLE_TIME: ${DB_MAX_IDLE_TIME}
      AUTH_BASIC_USERNAME: ${AUTH_BASIC_USERNAME}
      AUTH_BASIC_PASSWORD: ${AUTH_BASIC_PASSWORD}
      REDIS_ADDR: redis:6379
      REDIS_DB: ${REDIS_DB}
      RATE_LIMITER_MAX: ${RATE_LIMITER_MAX}
      RATE_LIMITER_DURATION: ${RATE_LIMITER_DURATION}
      RATE_LIMITER_ENABLED: ${RATE_LIMITER_ENABLED}
    ports:
      - "4000:4000"
    networks:
      - app_network

  postgres:
    image: postgres:16.4
    container_name: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: go_social
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7.2.8
    container_name: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "6380:6379"
    volumes:
      - redisdata:/data
    networks:
      - app_network

  migrate:
    image: migrate/migrate:v4.18.3
    container_name: migrate
    depends_on:
      - postgres
    entrypoint:
      [
        "migrate",
        "-database",
        "postgres://postgres:root@postgres:5432/go_social?sslmode=disable",
        "-path",
        "/app/internal/db/migrations",
        "up",
      ]
    volumes:
      - .:/app
    networks:
      - app_network

volumes:
  pgdata:
  redisdata:

networks:
  app_network:
    driver: bridge
